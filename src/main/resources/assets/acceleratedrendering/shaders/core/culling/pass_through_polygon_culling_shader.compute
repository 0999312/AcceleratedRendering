#version 460 core

layout(local_size_x = 128) in;

layout(binding=5, std430) readonly buffer IndicesIn {
    int indicesIn[];
};

layout(binding=6, std430) writeonly buffer IndicesOut {
    int indicesOut[];
};

layout(binding=0, offset=0) uniform atomic_uint indexCounter;

layout(location=1) uniform uint indexCount;

void main() {
    uint index = gl_GlobalInvocationID.x;

    if (index >= indexCount) {
        return;
    }

    if (index == 0) {
        atomicCounterExchange(indexCounter, 0u);
    }

    memoryBarrier();

    atomicCounterIncrement(indexCounter);
    indicesOut[index] = indicesIn[index];
}